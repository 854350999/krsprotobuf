// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.17.3
// source: search_terms/v1/examples.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Examples_GetExamples_FullMethodName = "/Examples/GetExamples"
)

// ExamplesClient is the client API for Examples service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ExamplesClient interface {
	GetExamples(ctx context.Context, in *GetExamplesReq, opts ...grpc.CallOption) (*GetExamplesReply, error)
}

type examplesClient struct {
	cc grpc.ClientConnInterface
}

func NewExamplesClient(cc grpc.ClientConnInterface) ExamplesClient {
	return &examplesClient{cc}
}

func (c *examplesClient) GetExamples(ctx context.Context, in *GetExamplesReq, opts ...grpc.CallOption) (*GetExamplesReply, error) {
	out := new(GetExamplesReply)
	err := c.cc.Invoke(ctx, Examples_GetExamples_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExamplesServer is the server API for Examples service.
// All implementations must embed UnimplementedExamplesServer
// for forward compatibility
type ExamplesServer interface {
	GetExamples(context.Context, *GetExamplesReq) (*GetExamplesReply, error)
	mustEmbedUnimplementedExamplesServer()
}

// UnimplementedExamplesServer must be embedded to have forward compatible implementations.
type UnimplementedExamplesServer struct {
}

func (UnimplementedExamplesServer) GetExamples(context.Context, *GetExamplesReq) (*GetExamplesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetExamples not implemented")
}
func (UnimplementedExamplesServer) mustEmbedUnimplementedExamplesServer() {}

// UnsafeExamplesServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ExamplesServer will
// result in compilation errors.
type UnsafeExamplesServer interface {
	mustEmbedUnimplementedExamplesServer()
}

func RegisterExamplesServer(s grpc.ServiceRegistrar, srv ExamplesServer) {
	s.RegisterService(&Examples_ServiceDesc, srv)
}

func _Examples_GetExamples_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetExamplesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExamplesServer).GetExamples(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Examples_GetExamples_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExamplesServer).GetExamples(ctx, req.(*GetExamplesReq))
	}
	return interceptor(ctx, in, info, handler)
}

// Examples_ServiceDesc is the grpc.ServiceDesc for Examples service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Examples_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "Examples",
	HandlerType: (*ExamplesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetExamples",
			Handler:    _Examples_GetExamples_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "search_terms/v1/examples.proto",
}
